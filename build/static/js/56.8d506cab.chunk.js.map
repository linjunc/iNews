{"version":3,"sources":["pages/user/components/concern/components/tags/components/tag-item/style.js","pages/user/components/concern/components/tags/components/tag-item/index.js","pages/user/components/concern/components/tags/style.js","pages/user/components/concern/components/tags/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","utils/storage.js","utils/high-order-components.js"],"names":["TagItemWrapper","styled","div","memo","props","tagInfo","name","tag","is_follow","useState","isConcern","setIsConcern","setTagList","arr","setSession","JSON","stringify","getTagList","parse","getSession","className","onClick","hasFollowTags","newArr","index","indexOf","splice","focusTags","tag_list","ConcernTagsWrapper","Empty","TagListWrapper","ul","ConcernTags","user_id","useParams","id","self_id","getLocal","isLoading","setIsLoading","tagsList","setTagsList","isAllTagsShow","setIsAllTagsShow","isSelf","useEffect","getTags","a","getListFn","getTagsList","n","skip","reqArr","Promise","all","resArr","data","myTagList","tagArr","map","item","getAllTags","allTagList","message","error","e","skeletonHandlerHOC","length","description","rows","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","itemName","localStorage","getItem","setLocal","setItem","sessionStorage","WrapperComponents","paragraph","loading","avatar","active"],"mappings":"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","file":"static/js/56.8d506cab.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const TagItemWrapper = styled.div`\n  width: 25%;\n  margin-bottom: 15.6px;\n  padding: 0 8.4px;\n  box-sizing: border-box;\n\n  .tag-container {\n    flex-direction: column;\n    justify-content: center;\n    width: 100%;\n    border: 1px solid #f1f1f1;\n    text-align: center;\n    padding: 18px 0;\n\n    .round {\n      justify-content: center;\n      width: 50px;\n      height: 50px;\n      margin-bottom: 10px;\n      border-radius: 50%;\n      background-color: rgba(24, 144, 255, 0.8);\n      color: #fff;\n      font-size: 18px;\n    }\n  }\n\n  .btn {\n    width: 70px;\n    height: 32px;\n    transition: all 0.3s;\n    border-radius: 4px;\n    border: 1px solid #1890ff;\n    cursor: pointer;\n    outline: none;\n    margin-top: 10px;\n    font-size: 15px;\n    outline: none;\n\n    &:hover {\n      opacity: 0.8;\n    }\n  }\n\n  .not-concern {\n    background-color: #fff;\n    color: #1890ff;\n  }\n\n  .has-concern {\n    background-color: #1890ff;\n    color: #fff;\n  }\n`\n","import React, { memo, useState } from 'react'\n\nimport { focusTags } from '../../../../../../../../services/user'\nimport { getSession, setSession } from '../../../../../../../../utils/storage'\n\nimport { TagItemWrapper } from './style'\n\nexport default memo(function TagItem(props) {\n  const { name, tag, is_follow = false } = props.tagInfo\n  const [isConcern, setIsConcern] = useState(is_follow)\n\n  // 在本地存取已关注标签列表\n  const setTagList = (arr) => {\n    return setSession('concernTagLists', JSON.stringify(arr))\n  }\n\n  // 在本地存取已关注标签列表\n  const getTagList = () => {\n    return JSON.parse(getSession('concernTagLists') || '[]')\n  }\n\n  // 用户点击关注按钮后发送请求并改变状态\n  const concernTag = () => {\n    // 从本地取出关注的列表\n    const hasFollowTags = getTagList()\n    if (!isConcern) {\n      const newArr = [...hasFollowTags, `${tag}`]\n      setTagList(newArr)\n      focusTags({\n        tag_list: newArr,\n      })\n    } else {\n      let newArr = getTagList()\n      const index = newArr.indexOf(tag)\n      if (index > -1) {\n        newArr.splice(index, 1)\n      }\n      setTagList(newArr)\n      focusTags({\n        tag_list: newArr,\n      })\n    }\n    setIsConcern(!isConcern)\n  }\n\n  return (\n    <TagItemWrapper>\n      <div className=\"tag-container middle-item\">\n        <div className=\"round middle-item\">{name}</div>\n        <button\n          className={'btn' + (isConcern ? ' has-concern' : ' not-concern')}\n          onClick={concernTag}\n        >\n          {isConcern ? '已关注' : '关注'}\n        </button>\n      </div>\n    </TagItemWrapper>\n  )\n})\n","import styled from 'styled-components'\nimport { Empty } from 'antd'\n\nexport const MyEmpty = styled(Empty)`\n  margin-top: 100px;\n`\nexport const ConcernTagsWrapper = styled.div`\n  .btn-group {\n    display: inline-block;\n    background: #fafafa;\n    padding: 3px;\n    margin: 10px 20px 0 0;\n    border-radius: 2px;\n\n    .btn-item {\n      margin: 0 1px 0 0;\n      transition: all 0.3s;\n      background-color: transparent;\n      border: none;\n      line-height: 22px;\n      padding: 2px 12px;\n      font-size: 14px;\n      color: #4e5969;\n      cursor: pointer;\n\n      &.active {\n        color: #1890ff;\n        background-color: #fff;\n      }\n    }\n  }\n`\n\nexport const TagListWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 10px;\n`\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport { getLocal, setSession } from '../../../../../../utils/storage'\n\nimport { message, Empty } from 'antd'\nimport { getAllTags, getTagsList } from '../../../../../../services/user'\nimport { skeletonHandlerHOC } from '../../../../../../utils/high-order-components'\nimport TagItem from './components/tag-item'\n\nimport { ConcernTagsWrapper, TagListWrapper } from './style'\n\nexport default function ConcernTags() {\n  const { id: user_id } = useParams()\n  const { user_id: self_id } = JSON.parse(getLocal('userInfo')) || {}\n  const [isLoading, setIsLoading] = useState(true)\n  const [tagsList, setTagsList] = useState([])\n\n  const [isAllTagsShow, setIsAllTagsShow] = useState(false)\n\n  const isSelf = self_id === user_id\n\n  // 获取该用户所有的关注者列表\n  useEffect(() => {\n    const getTags = async () => {\n      setIsLoading(true)\n      try {\n        const getListFn = (id) => {\n          return getTagsList({\n            user_id: id,\n            n: 40,\n            skip: 0,\n          })\n        }\n        let reqArr = []\n        if (getLocal('token')) {\n          reqArr = isSelf\n            ? [getListFn(user_id)]\n            : [getListFn(user_id), getListFn(self_id)]\n        } else {\n          reqArr = [getListFn(user_id)]\n        }\n        const resArr = await Promise.all(reqArr)\n        const { tag_list } = resArr[0].data\n        const { tag_list: myTagList } = resArr[1]?.data || {}\n        const tagArr =\n          (isSelf ? tag_list : myTagList)?.map((item) => item.tag) || []\n        // 在本地存储已关注的标签\n        setSession('concernTagLists', JSON.stringify(tagArr))\n        if (!isAllTagsShow && tag_list) {\n          setTagsList(tag_list)\n        } else if (tag_list) {\n          const { data } = await getAllTags()\n          const { tag_list: allTagList } = data || {}\n          setTagsList(allTagList)\n        }\n      } catch (err) {\n        message.error('请求失败，请重试！')\n      } finally {\n        setIsLoading(false)\n      }\n    }\n    getTags()\n  }, [isAllTagsShow, isSelf, self_id, user_id])\n\n  return (\n    <ConcernTagsWrapper>\n      {self_id === user_id && (\n        <div className=\"btn-group\">\n          <button\n            className={'btn-item' + (isAllTagsShow ? '' : ' active')}\n            onClick={(e) => setIsAllTagsShow(false)}\n          >\n            已关注标签\n          </button>\n          <button\n            className={'btn-item' + (isAllTagsShow ? ' active' : '')}\n            onClick={(e) => setIsAllTagsShow(true)}\n          >\n            全部标签\n          </button>\n        </div>\n      )}\n      {skeletonHandlerHOC(\n        tagsList.length ? (\n          <TagListWrapper>\n            {tagsList.map((item) => {\n              const { name } = item\n              return <TagItem key={name} tagInfo={item} />\n            })}\n          </TagListWrapper>\n        ) : (\n          <Empty description=\"暂时还没有关注标签哦！\" />\n        ),\n        { rows: 2 },\n        isLoading,\n      )}\n    </ConcernTagsWrapper>\n  )\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// 从本地存储中获取数据的函数\nexport const getLocal = (itemName) => {\n  return localStorage.getItem(itemName)\n}\n\n// 存取数据到本地的函数\nexport const setLocal = (itemName, item) => {\n  localStorage.setItem(itemName, item)\n}\n\n// 从会话存储中获取数据的函数\nexport const getSession = (itemName) => {\n  return sessionStorage.getItem(itemName)\n}\n\n// 存取数据到会话数据的函数\nexport const setSession = (itemName, item) => {\n  sessionStorage.setItem(itemName, item)\n}\n\n// 将取出来数据中的实体字符转为innerHTML能够解析成的标签形式\n// const escapeHtml = str => {\n//   const arrEntities = { lt: '<', gt: '>', nbsp: ' ', amp: '&', quot: '\"' }\n//   return (\n//     str && str.replace(/&(lt|gt|nbsp|amp|quot);/gi, function (all, t) {\n//       return arrEntities[t]\n//     })\n//   )\n// }\n","import React from 'react'\n\nimport { Skeleton } from 'antd'\n\n// 用于给传进来的组件包裹多层骨架屏的\nexport const skeletonHandlerHOC = (WrapperComponents, ...args) => {\n  // 从args中获取到不同组件应用骨架屏时想要的效果及其对应的对象和函数\n  const [paragraph = { rows: 3 }, loading, avatar = false] = args\n\n  return (\n    <>\n      <Skeleton\n        paragraph={paragraph}\n        active\n        avatar={avatar}\n        loading={loading}\n        className=\"Skeleton\"\n      >\n        {WrapperComponents}\n      </Skeleton>\n      <Skeleton\n        paragraph={paragraph}\n        active\n        avatar={avatar}\n        loading={loading}\n        className=\"Skeleton\"\n      />\n      <Skeleton\n        paragraph={paragraph}\n        active\n        avatar={avatar}\n        loading={loading}\n        className=\"Skeleton\"\n      />\n    </>\n  )\n}\n"],"sourceRoot":""}